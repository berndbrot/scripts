#!/bin/bash
# copies UNIX configuration files to other hosts

info()
{
	if test ${verbose:-0} -gt 0
	then
		echo "$*" 1>&2
	fi
}

error()
{
	echo "$*" 1>&2
}

run()
{
	if test "$simulate" -gt 0
	then
		echo "$@"
	else
		"$@"
	fi
	return $?
}

scp()
{
	local scpflags=-Bq
	if test "$verbose" -gt 0
	then
		command scp $scpflags "$@"
	else
		command scp $scpflags "$@" 2>/dev/null
	fi
	return $?
}

ssh()
{
	if test "$verbose" -gt 0
	then
		command ssh "$@"
	else
		command ssh "$@" 2>/dev/null
	fi
	return $?
}

read_defaults()
{
	conffile="$HOME"/conf.tar.gz
	hosts=
	verbose=0
	test -f "$HOME"/.confdist && . "$HOME"/.confdist
}

usage()
{
	echo "Usage: confdist [-c <config file>] [-v] [<host>...]" 1>&2
}

read_options()
{
	while getopts ":c:hv" flag
	do
		case $flag in
		c)
			conffile="$OPTARG"
			;;
		h)
			usage
			exit 0
			;;
		v)
			verbose=$(($verbose + 1))
			;;
		':')
			error "Missing argument to -$OPTARG"
			usage
			exit 2
			;;
		'?')
			error "Unknown option -$OPTARG"
			usage
			exit 2
			;;
		*)
			error "The -$flag option is not supported yet"
			usage
			exit 2
			;;
		esac
	done
	[ $verbose -gt 1 ] && set -x

	shift `expr $OPTIND - 1`

	test $# -gt 0 && hosts="$@"
}

copy_to()
{
	local host=$1
	info "Copying to $host"
	printf "Copying to $host... "
	scp $conffile $host:~
	if test $? -ne 0
	then
		printf "failure\n"
		continue
	fi
	printf "success\n"
}

install_on()
{
	local host=$1
	printf "Installing on $host... "
	ssh $host "mkdir scripts"
	scp $HOME/scripts/confinst $host:scripts
	if test $? -ne 0
	then
		printf "failure copying install script to $host:scripts\n"
		continue
	fi

	ssh $host "scripts/confinst" -e
	if test $? -ne 0
	then
		printf "failure running remote install script\n"
	else
		printf "success\n"
	fi
}

distribute_from()
{
	local host=$1
	ssh $host confdist
}

read_defaults
read_options "$@"

for host in $hosts
do
	copy_to $host && install_on $host && distribute_from $host || true
done

# vim: set ts=4 sw=4 tw=0 noet:
